[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "qualia-plugin-snn"
authors = [
    {name = "Pierre-Emmanuel Novac", email = "penovac@unice.fr"},
]
description = "Qualia SNN Plugin"
readme = "README.md"
requires-python = ">=3.9,<3.13"
license.text = "AGPL-3.0-or-later"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
]
dependencies = [
    'numpy < 1.24',
    'qualia-core[pytorch]',
    'torch',
    'pytorch-lightning',
    'spikingjelly',
    'typing_extensions; python_version < "3.12"',

]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/LEAT-EDGE/qualia-plugin-snn"
documentation = "https://leat-edge.github.io/qualia-plugin-snn"

[project.optional-dependencies]
codegen = ['qualia-codegen-plugin-snn']
tests = ['pytest', 'pytest-dependency', 'pytest-xdist', 'pytest-env', 'dill', 'filelock']
lint = ['ruff']
typecheck = ['mypy', 'pyright']
docs = ['pdm', 'sphinx', 'sphinx-rtd-theme', 'myst-parser']

[tool.pytest.ini_options]
markers = [
    "deploy: tests requiring deployment on target (deselect with '-m \"not deploy\"')",
]
testpaths = "tests"
env = [
    "CUBLAS_WORKSPACE_CONFIG=:4096:8",
    "PYTHONHASHSEED=2",
]

[tool.pdm]

[tool.pdm.resolution]
respect-source-order = true

[[tool.pdm.source]]
name = "qualia-nightly"
url = "https://naixtech.unice.fr/devpi/penovac/qualia-nightly/+simple"
verify_ssl = false

[tool.pdm.version]
source = "scm"

[tool.ruff]
extend-exclude = ["third_party"]
lint.select = ["ALL"]
#select = ["E", "F", "B"]
lint.ignore = [
  "N999", # Our module have the same name as the contained class in PascalCase
  "D203", # Prefer D211
  "D213" # D212 is ruff's preference
]
line-length = 131
target-version = "py39"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.mypy]
files = ["src"]
exclude = ["third_party"]
python_version = 3.9
strict = true
show_column_numbers = true
pretty = true
plugins = "numpy.typing.mypy_plugin"

[tool.pylsp-mypy]
enabled = true
live_mode = true
strict = true
report_progress = true

[tool.pyright]
include = ["src"]
exclude = ["**/third_party", "**/examples"]
pythonVersion = "3.9"
typeCheckingMode = "strict"
reportCallInDefaultInitializer = "warning"
reportImplicitOverride = "warning"
reportImplicitStringConcatenation = "warning"
reportMissingSuperCall = "warning"
reportPropertyTypeMismatch = "warning"
reportShadowedImports = "warning"
reportUninitializedInstanceVariable = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedCallResult = "warning"
