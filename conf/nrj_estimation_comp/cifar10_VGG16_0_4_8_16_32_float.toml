[bench]
name        = "cifar10_VGG16_0_4_8_16_32_float"
seed        = 2
first_run   = 1
last_run    = 3
plugins = ['qualia_plugin_snn']

[learningframework]
kind = 'PyTorch'
params.devices      = 1
params.precision    = '16-mixed'
params.use_best_epoch = true

[deploy]
target          = 'Linux'
converter.kind  = 'QualiaCodeGen'
quantize        = ['float32']
optimize        = ['']
compress        = [1]

[dataset]
kind = "CIFAR10"
params.path     = "data/cifar-10-batches-py/"
params.dtype    = "uint8" # Keep uint8 dtype instead of converting to float32 for AutoAugment

[[preprocessing]]
kind = "DatasetSplitter"
params.source = "train"
params.dest = "valid"
params.ratio = 0.1

[[data_augmentation]]
kind = "HorizontalFlip"
params.before   = true # Run on CPU
params.after    = false

[[data_augmentation]]
kind = "Crop"
params.size     = [32, 32]
params.padding  = [4, 4]
params.before   = true # Run on CPU
params.after    = false

[[data_augmentation]]
kind = "AutoAugment"
params.policy   = "CIFAR10"
params.before   = true # Run on CPU
params.after    = false

# Convert to Float32 and scale by 255 after AutoAugment
[[data_augmentation]]
kind = "IntToFloat32"
params.scale    = true
params.before   = true # Run on CPU
params.after    = false
params.evaluate = true # Also run during inference

[[data_augmentation]]
kind = "Mixup"
params.before   = false
params.after    = true # Run on GPU

[[preprocessing]]
kind = "Class2BinMatrix"

[[postprocessing]]
kind    = 'FuseBatchNorm'
export  = true

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 4
params.fifo_size = 1000
params.estimation_type.add = 'ICONIP'
params.estimation_type.mul = 'ICONIP'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 4
params.fifo_size = 1000
params.estimation_type.add = 'saturation'
params.estimation_type.mul = 'saturation'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 4
params.fifo_size = 1000
params.estimation_type.add = 'linear'
params.estimation_type.mul = 'quadratic'

# mem_width = 8
[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 8
params.fifo_size = 1000
params.estimation_type.add = 'ICONIP'
params.estimation_type.mul = 'ICONIP'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 8
params.fifo_size = 1000
params.estimation_type.add = 'saturation'
params.estimation_type.mul = 'saturation'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 8
params.fifo_size = 1000
params.estimation_type.add = 'linear'
params.estimation_type.mul = 'quadratic'

# mem_width = 16
[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 16
params.fifo_size = 1000
params.estimation_type.add = 'ICONIP'
params.estimation_type.mul = 'ICONIP'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 16
params.fifo_size = 1000
params.estimation_type.add = 'saturation'
params.estimation_type.mul = 'saturation'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 16
params.fifo_size = 1000
params.estimation_type.add = 'linear'
params.estimation_type.mul = 'quadratic'

# mem_width = 32
[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 32
params.fifo_size = 1000
params.estimation_type.add = 'ICONIP'
params.estimation_type.mul = 'ICONIP'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 32
params.fifo_size = 1000
params.estimation_type.add = 'saturation'
params.estimation_type.mul = 'saturation'

[[postprocessing]]
kind = "EnergyEstimationMetric"
params.mem_width = 32
params.fifo_size = 1000
params.estimation_type.add = 'linear'
params.estimation_type.mul = 'quadratic'


[model_template]
kind                = "CNN"
epochs              = 300
batch_size          = 64
load                = true
train               = false
params.dims		    = 2
params.prepool 		= 1
params.filters      = [ 64, 64, 128, 128, 256, 256, 256, 512, 512, 512, 512, 512, 512]
params.kernel_sizes = [  3,  3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3]
params.paddings     = [  1,  1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1]
params.strides      = [  1,  2,   1,   2,   1,   1,   2,   1,   1,   2,   1,   1,   2]
params.pool_sizes   = [  0,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0]
params.dropouts     = [  0,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 0, 0]
params.fc_units     = [512, 512]
params.batch_norm   = true

[model_template.optimizer]
kind = "SGD"
params.lr = 0.05
params.momentum = 0.9
params.weight_decay	= 0

[model_template.optimizer.scheduler]
kind = "StepLR"
params.gamma = 0.5
params.step_size = 30

[[model]]
name                        = "cifar10_VGG16_seed_2_e300"
disabled = false
