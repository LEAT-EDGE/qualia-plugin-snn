[bench]
name = "DVSGesture_SCNN_float32_Linux"
seed = 2
first_run = 1
last_run = 1
use_test_as_valid = true
plugins = ['qualia_plugin_snn']

[learningframework]
kind = 'SpikingJellyMultiStepTimeStepsInData'

[experimenttracking]
kind = 'ClearML'
params.project_name = 'qualia-plugin-snn'
params.task_name = 'DVSGesture_SCNN_float32_Linux'

[deploy]
#target = 'SPLEAT'
#converter.kind = 'SPLEAT'
#converter.params.output_feature_maps = [1, 2, 3, 4]
target = 'Linux'
converter.kind = 'QualiaCodeGen'
quantize = ['float32']
optimize = ['']

[dataset]
kind = 'DVSGesture'
params.path = "data/DvsGesture/"
params.data_type = 'frame'
params.duration = 100000
params.timesteps = 8

[[preprocessing]]
kind = "Class2BinMatrix"

[model_template]
kind = 'SCNN'
epochs = 30
batch_size = 64
params.input_shape = [128, 128, 2]

[model_template.optimizer]
kind = "Adam"
params.lr               = 0.005
params.weight_decay	= 5e-4

[model_template.optimizer.scheduler]
kind = "MultiStepLR"
params.milestones	= [10, 20, 25]
params.gamma		= 0.1

[[model]]
name = 'dvsgesture_scnn'
params.dims = 2
#params.filters = [24, 32, 48, 64]
params.filters = [4, 8, 16, 32, 64, 128, 256]
params.kernel_sizes = [7, 3, 3, 3, 3, 3, 3]
params.pool_sizes = [0, 0, 0, 0, 0, 0, 0]
params.dropouts = [0, 0, 0, 0, 0, 0, 0]
params.strides = [2, 2, 2, 2, 2, 2, 2]
params.paddings = [3, 1, 1, 1, 1, 1, 1]
params.fc_units = []
params.timesteps = 8
params.neuron.kind = 'LIFNode'
params.neuron.params.v_threshold = 1.0
params.neuron.params.v_reset = false
params.neuron.params.tau = 2.0
params.neuron.params.step_mode = 'm' # Multi-step mode, make sure to use SpikingJellyMultiStep learningframework
#params.neuron.params.backend = 'cupy'
params.neuron.params.backend = 'torch'
params.gsp = true
params.batch_norm = true
disabled = false
